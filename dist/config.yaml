version: 2
project_name: copacetic-mcp
release:
  github:
    owner: duffney
    name: copacetic-mcp
  prerelease: auto
  name_template: '{{.ProjectName}} v{{.Version}}'
  header: |
    ## Container Patching with Copacetic MCP Server v{{ .Version }}

    This release includes cross-platform binaries for the Copacetic MCP server and client.
  footer: |
    **Full Changelog**: https://github.com/duffney/copacetic-mcp/compare/{{ .PreviousTag }}...{{ .Tag }}

    ### Usage

    1. Download the appropriate binary for your platform
    2. Extract the archive
    3. Run the MCP server: `./copacetic-mcp-server`

    For more information, see the [README](https://github.com/duffney/copacetic-mcp/blob/main/README.md).
builds:
  - id: copacetic-mcp-server
    goos:
      - linux
      - darwin
      - windows
    goarch:
      - amd64
      - arm64
    goamd64:
      - v1
    go386:
      - sse2
    goarm:
      - "6"
    goarm64:
      - v8.0
    gomips:
      - hardfloat
    goppc64:
      - power8
    goriscv64:
      - rva20u64
    targets:
      - linux_amd64_v1
      - linux_arm64_v8.0
      - darwin_amd64_v1
      - darwin_arm64_v8.0
      - windows_amd64_v1
    ignore:
      - goos: windows
        goarch: arm64
    dir: .
    main: ./main.go
    binary: copacetic-mcp-server
    builder: go
    tool: go
    command: build
    ldflags:
      - -s -w -X main.version={{.Version}} -X main.commit={{.Commit}} -X main.date={{.Date}}
    flags:
      - -trimpath
    env:
      - CGO_ENABLED=0
  - id: copacetic-mcp-client
    goos:
      - linux
      - darwin
      - windows
    goarch:
      - amd64
      - arm64
    goamd64:
      - v1
    go386:
      - sse2
    goarm:
      - "6"
    goarm64:
      - v8.0
    gomips:
      - hardfloat
    goppc64:
      - power8
    goriscv64:
      - rva20u64
    targets:
      - linux_amd64_v1
      - linux_arm64_v8.0
      - darwin_amd64_v1
      - darwin_arm64_v8.0
      - windows_amd64_v1
    ignore:
      - goos: windows
        goarch: arm64
    dir: .
    main: ./cmd/client/main.go
    binary: copacetic-mcp-client
    builder: go
    tool: go
    command: build
    ldflags:
      - -s -w
    flags:
      - -trimpath
    env:
      - CGO_ENABLED=0
archives:
  - id: default
    name_template: '{{ .ProjectName }}_ {{- title .Os }}_ {{- if eq .Arch "amd64" }}x86_64 {{- else if eq .Arch "386" }}i386 {{- else }}{{ .Arch }}{{ end }} {{- if .Arm }}v{{ .Arm }}{{ end }}'
    format: tar.gz
    format_overrides:
      - goos: windows
        format: zip
    files:
      - src: README.md
      - src: LICENSE*
snapshot:
  name_template: '{{ incpatch .Version }}-next'
  version_template: '{{ incpatch .Version }}-next'
checksum:
  name_template: checksums.txt
  algorithm: sha256
changelog:
  filters:
    exclude:
      - '^docs:'
      - '^test:'
      - '^ci:'
      - '^chore:'
      - '^style:'
      - '^refactor:'
  sort: asc
  use: github
  format: '{{ .SHA }}: {{ .Message }} ({{ with .AuthorUsername }}@{{ . }}{{ else }}{{ .AuthorName }} <{{ .AuthorEmail }}>{{ end }})'
  groups:
    - title: Features
      regexp: ^.*?feat(\([[:word:]]+\))??!?:.+$
    - title: Bug fixes
      regexp: ^.*?fix(\([[:word:]]+\))??!?:.+$
      order: 1
    - title: Performance improvements
      regexp: ^.*?perf(\([[:word:]]+\))??!?:.+$
      order: 2
    - title: Others
      order: 999
dist: dist
env_files:
  github_token: ~/.config/goreleaser/github_token
  gitlab_token: ~/.config/goreleaser/gitlab_token
  gitea_token: ~/.config/goreleaser/gitea_token
before:
  hooks:
    - go mod tidy
source:
  name_template: '{{ .ProjectName }}-{{ .Version }}'
  format: tar.gz
gomod:
  gobinary: go
announce:
  twitter:
    message_template: '{{ .ProjectName }} {{ .Tag }} is out! Check it out at {{ .ReleaseURL }}'
  mastodon:
    message_template: '{{ .ProjectName }} {{ .Tag }} is out! Check it out at {{ .ReleaseURL }}'
    server: ""
  reddit:
    title_template: '{{ .ProjectName }} {{ .Tag }} is out!'
    url_template: '{{ .ReleaseURL }}'
  slack:
    message_template: '{{ .ProjectName }} {{ .Tag }} is out! Check it out at {{ .ReleaseURL }}'
    username: GoReleaser
  discord:
    message_template: '{{ .ProjectName }} {{ .Tag }} is out! Check it out at {{ .ReleaseURL }}'
    author: GoReleaser
    color: "3888754"
    icon_url: https://goreleaser.com/static/avatar.png
  teams:
    title_template: '{{ .ProjectName }} {{ .Tag }} is out!'
    message_template: '{{ .ProjectName }} {{ .Tag }} is out! Check it out at {{ .ReleaseURL }}'
    color: '#2D313E'
    icon_url: https://goreleaser.com/static/avatar.png
  smtp:
    subject_template: '{{ .ProjectName }} {{ .Tag }} is out!'
    body_template: 'You can view details from: {{ .ReleaseURL }}'
  mattermost:
    message_template: '{{ .ProjectName }} {{ .Tag }} is out! Check it out at {{ .ReleaseURL }}'
    title_template: '{{ .ProjectName }} {{ .Tag }} is out!'
    username: GoReleaser
  linkedin:
    message_template: '{{ .ProjectName }} {{ .Tag }} is out! Check it out at {{ .ReleaseURL }}'
  telegram:
    message_template: '{{ mdv2escape .ProjectName }} {{ mdv2escape .Tag }} is out{{ mdv2escape "!" }} Check it out at {{ mdv2escape .ReleaseURL }}'
    parse_mode: MarkdownV2
  webhook:
    message_template: '{ "message": "{{ .ProjectName }} {{ .Tag }} is out! Check it out at {{ .ReleaseURL }}"}'
    content_type: application/json; charset=utf-8
    expected_status_codes:
      - 200
      - 201
      - 202
      - 204
  opencollective:
    title_template: '{{ .Tag }}'
    message_template: '{{ .ProjectName }} {{ .Tag }} is out!<br/>Check it out at <a href="{{ .ReleaseURL }}">{{ .ReleaseURL }}</a>'
  bluesky:
    message_template: '{{ .ProjectName }} {{ .Tag }} is out! Check it out at {{ .ReleaseURL }}'
git:
  tag_sort: -version:refname
github_urls:
  download: https://github.com
gitlab_urls:
  download: https://gitlab.com
